#!/bin/bash
# install script for xremap wordstar keys

exec_dest="/usr/local/bin/xremap"

echo "Setting up user to be able to access the keyboard device."
sudo gpasswd -a $(whoami) input
echo "Ensuring uinput device is accessible by input group"
rule='KERNEL=="uinput", GROUP="input", TAG+="uaccess"'
file='/etc/udev/rules.d/99-input.rules'
! grep -qs "$rule" "$file" && echo "$rule" | sudo tee $file >/dev/null
echo "User $(whoami) is now set up."
echo

# List latest xremap versions for optional installation
installed=
echo "Listing latest xremap binaries for you to install"
curl -sL https://api.github.com/repos/k0kubun/xremap/releases/latest >xremaps.xml
options=$(sed -nE "/name/s/.*\"(xremap.*zip)\".*/\1/p" xremaps.xml)
nl <<<"$options"
read -p "Which binary of xremap should I install in your system (Esc to skip)? " selection
echo
if [[ "$selection" =~ ^[0-9]$ ]]; then
  binary_name=$(sed -n ${selection}p <<<"$options")
  echo "Downloading and installing $binary"
  binary_url=$(sed -nE "s/.*browser_download_url.*(https.*$binary_name)\".*/\1/p" xremaps.xml)
  curl -fSLO $binary_url
  unzip -o $binary_name
  rm $binary_name

  echo "Copying xremap to $exec_dest"
  systemctl --user stop xremap &>/dev/null
  sudo install -D xremap "$exec_dest"
  installed=true
else
  exec_dest="$(which xremap)"
fi
rm xremaps.xml
echo
echo "If you use Wayland you will also want to install this extension to enable app-specific keys:"
echo "   https://github.com/xremap/xremap-gnome"
echo "Basic setup Complete: you should now be able to run 'xremap wordstar'"

# Ask whether to install xdotool
install_tool=apt-get
[ -`which apt-get`- == -""- ] && install_tool=yum
echo
echo "Note: xdotool doesn't work on Wayland. But if you're not using Wayland you might want to install it"
read -p "Shall I also '$install_tool install xdotool' so that ^W/^Z scroll keys work? (y/n)? " -n1 xdotool
echo
[ "$xdotool" == "y" ] && sudo $install_tool install xdotool

[[ ! -f "$exec_dest" ]] && echo "Unable to install xremap" && exit 1

# Ask whether to install as a user service
echo
read -p "Shall I also install wordstar keys as a user service to run it at login? (y/n)? " -n1 add_at_startup
echo
key_file=~/".config/xremap/wordstar.yml"
service_file=~/".config/systemd/user/xremap.service"
if [ "$add_at_startup" == "y" ]; then
  mkdir -p `dirname $key_file`
  mkdir -p `dirname $service_file`
  echo "Copying key file to $key_file"
  cp wordstar.yml "$key_file"
  echo "Copying service file to $service_file"
  sed "s|ExecStart=xremap|ExecStart=$exec_dest|" xremap.service >"$service_file"
fi

# Check if service is installed
if [[ -f "$service_file" ]]; then
  systemctl --user enable xremap  # for next boot
  systemctl --user start xremap
  echo
  echo "Service enabled. You can now start/stop/check the service by typing:"
  echo "  systemctl --user start|stop|status xremap"
  echo "or view the log with:"
  echo "  journalctl --user -fu xremap"
  echo "Note: changes to keymap at ~/.config/xremap/wordstar.yml will take effect immediately"
fi

# Warn if the xremap on the PATH is not the one I installed
if [[ "$installed" != "" && "$(which xremap)" != "$exec_dest" ]]; then
  echo
  echo "*** Warning ***: The xremap on your PATH is not the same as the one I just installed in $exec_dest."
  echo "You may need to remove the one at $(which xremap)"
fi
